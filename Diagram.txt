//folder structure
root:
	index.html
	scripts:
		drivers.js				// 1. platform detection and specific functions 2. general functions
		TweenMax.js				// Div manipulation (transform)
		container.js			// Container Class 
		containerTemplates.js	// Container Descriptors
		camera.js				// Camera functions to extend Container to Camera
		factory.js				// 1. Generic container and camera creation 2. AMS runner
		edit.js					// Container Interface Builder and Manager
		plugins:
			...					// Plugin scripts that can live inside containers ( js apps )
								// eg.	TextEditor, Charts, Physics Engine, Canvas Drawer, et
	
	themes: ( AMS ) //each of this files scripts a certain template and imposes a certain style on the containers
		default.js	
	
	style:	( contains css files that style containers )
		default.css

	regional:
		regional.js				// Loader for language specific messages
		english:
			messages.js			// Language specific messages
		french:
			messages.js	
	eresources:
		...						// Images and resources used by editor
	resources:
		...						// Images and resources used in presentation ( this is copied to the presentation's resources forlder and then deleted form this one )
	

Container (DIV)
{
	//properties
	UID: unique string id
	x:   x position
	y:   y position
	width
	height
	style: css style string
	children: list of children
	
	//functions
	attach(): attaches this child to a parent
	getChildren(): get list of children
	show(): shows container and all children
	hide(): hides container and all children
	delete(): deletes container and all children
	move(dx,dy): moves this object by dx and dy
	scale(amount): resizes this object by amount
	rotate(dang): rotates this object by dangle
	setAngle(angle): sets object's angle
}

Interaction System
{
	//supports both mobile and desktop
}

Camera
{
	//uses external interaction system to trigger actuator functions

	//bounding box properties
	x:	camera top left x position
	y:	camera top left y position
	width: camera interaction area width
	height:	camera interaction area height

	//actuator functions
	move(dx,dy)				:moves camera position
	zoom(cx,cy,amount)		:zooms camera perspective
	rotate(cx,cy,amount)	:rotates camera perspective
	setAngle(cx,cy,angle)	:sets camera perspective angle
}