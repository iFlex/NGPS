NGPS application standards

Types of applications:
1. Global apps ( included once = only one copy of the code )
2. Lightweight continuous apps ( apps that run inside the container exclusively for that container )
3. Heavyweight apps ( apps that run inside a container and need to be paused and unloaded when leaving the container )

Problem: Input
Input will be hard to divert to the app and from the app back to NGPS
*Solution:
	When user is not interacting with the app:
		container will have an configurable div (default = invisible) covering it: 
			that div facilitates: moving,resizing,rotating, etc
			if div is clicked then it becomes hidden and the app gains control of the events
	When user is interacting with the app:
		any click outside the container will quit the interaction mode causing the app to suspend
		there will be a small configurable icon ( div ) on the screen that will let the container
		regain control of the events by shoing the above mentioned div again

Standard For 1. Apps:
* 	Code is loaded once
*	App only stores input method , output result and state information in container

Standard For 2. Apps:
* 	Code is loaded when bound with container ( and keeps running even if container is out of sight )

Standard For 3. Apps:
*	Code is loaded when iFrame container is loaded
* 	Code can be unloaded easily by unloading iFrame content
* 	App must have a splash screen image to show when app is not triggered
*	App may have a loading routing to show wile it loads
*	App must store state in an invisible div so that it can resume if necessary

App Loaders ( main.js )
*	Must be structured as a class in order to have multiple instances and be bond to containers
*	Must have a constructor with the same name as the plugin that creates the objects
*	Must have methods:
		init
		load
		store
		show
		hide

*	May handle events:
		onFocus
		onLoseFocus
